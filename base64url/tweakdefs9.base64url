LS1NZWF0YmFsbGx1bmNoIFJlbG9hZGVkDQpsb2NhbCBVbml0RGVmcyxhPVVuaXREZWZzIG9ye30sJ2FybWJvdHJhaWwnbG9jYWwgYj17YXJtbWVhdGJhbGw9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J01lYXRiYWxsIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3JhbmdlPTc1NTAsbWV0YWxwZXJzaG90PTUzMDAsZW5lcmd5cGVyc2hvdD05NjAwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdhcm1tZWF0YmFsbCd9fX19LGFybWFzc2ltaWxhdG9yPXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdBc3NpbWlsYXRvciBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtyYW5nZT03NTUwLG1ldGFscGVyc2hvdD00NTAwLGVuZXJneXBlcnNob3Q9ODAwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtYXNzaW1pbGF0b3InfX19fSxhcm1wd3Q0PXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdFcGljIFBhd24gTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17cmFuZ2U9NzU1MCxtZXRhbHBlcnNob3Q9MTQyMDAsZW5lcmd5cGVyc2hvdD00ODAwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtcHd0NCd9fX19LGxlZ2VzaG90Z3VubWVjaD17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nUHJldG9yaWFuIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3JhbmdlPTc1NTAsbWV0YWxwZXJzaG90PTEyNTAwLGVuZXJneXBlcnNob3Q9Mzg0MDAwLHJlbG9hZHRpbWU9MC41LGN1c3RvbXBhcmFtcz17c3RvY2twaWxlbGltaXQ9NTAsc3Bhd25zX25hbWU9J2xlZ2VzaG90Z3VubWVjaCd9fX19LGxlZ2phdj17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nSmF2ZWxpbiBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtyYW5nZT03NTUwLG1ldGFscGVyc2hvdD0yMTUwLGVuZXJneXBlcnNob3Q9MTAyNDAwLHJlbG9hZHRpbWU9MC41LGN1c3RvbXBhcmFtcz17c3RvY2twaWxlbGltaXQ9NTAsc3Bhd25zX25hbWU9J2xlZ2phdid9fX19LGFybXJhej17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nUmF6b3JiYWNrIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3JhbmdlPTc1NTAsbWV0YWxwZXJzaG90PTY3NTAsZW5lcmd5cGVyc2hvdD0yODM1MjAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtcmF6J319fX0sY29yYWt0ND17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nRXBpYyBHcnVuZCBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtyYW5nZT03NTUwLG1ldGFscGVyc2hvdD0xMDcwMCxlbmVyZ3lwZXJzaG90PTM4NDAwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdjb3Jha3Q0J319fX0sY29yZGVtb249e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0RlbW9uIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3JhbmdlPTc1NTAsbWV0YWxwZXJzaG90PTEwNzAwLGVuZXJneXBlcnNob3Q9Mzg0MDAwLHJlbG9hZHRpbWU9MC41LGN1c3RvbXBhcmFtcz17c3RvY2twaWxlbGltaXQ9NTAsc3Bhd25zX25hbWU9J2NvcmRlbW9uJ319fX0sYXJtdmFkZXI9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J1R1bWJsZXdlZWQgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17cmFuZ2U9NzU1MCxtZXRhbHBlcnNob3Q9MTE1LGVuZXJneXBlcnNob3Q9MTI1MDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtdmFkZXInfX19fSxhcm12YWRlcnQ0PXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdFcGljIFR1bWJsZXdlZWQgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17cmFuZ2U9NzU1MCxtZXRhbHBlcnNob3Q9MjY2MDAsZW5lcmd5cGVyc2hvdD00ODAwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtdmFkZXJ0NCd9fX19LGFybXQxPXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdBcm1hZGEgVDEgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17c3RvY2twaWxldGltZT0wLjUscmFuZ2U9NzU1MCxtZXRhbHBlcnNob3Q9MjUwLGVuZXJneXBlcnNob3Q9MTI1MDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtaGFtIGFybWpldGggYXJtcHcgYXJtcm9jayBhcm13YXIgYXJtYWggYXJtYW5hYyBhcm1taCBhcm1zaCBhcm1hcnQgYXJtZmF2IGFybWZsYXNoIGFybWphbnVzIGFybXBpbmNlciBhcm1zYW0gYXJtc3R1bXAgYXJtemFwcGVyJyxzcGF3bnNfbW9kZT0ncmFuZG9tJ319fX0sYXJtdDI9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0FybWFkYSBUMiBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtzdG9ja3BpbGV0aW1lPTEscmFuZ2U9NzU1MCxtZXRhbHBlcnNob3Q9OTcwLGVuZXJneXBlcnNob3Q9NDUwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtYWFrIGFybWFtcGggYXJtZmFzdCBhcm1mYm95IGFybWZpZG8gYXJtbWF2IGFybXNuaXBlIGFybXNwdGsgYXJtemV1cyBhcm1idWxsIGFybWNyb2MgYXJtZ3JlbWxpbiBhcm1sYXRuayBhcm1tYW5uaSBhcm1tYXJ0IGFybW1lcmwgYXJteW9yaycsc3Bhd25zX21vZGU9J3JhbmRvbSd9fX19LGFybXQzPXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdBcm1hZGEgVDMgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17c3RvY2twaWxldGltZT0yLHJhbmdlPTc1NTAsbWV0YWxwZXJzaG90PTg1MDAsZW5lcmd5cGVyc2hvdD0xODAwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nYXJtYmFudGggYXJtbHVuIGFybW1hciBhcm1wcm93bCBhcm1yYXogYXJtdGhvciBhcm12YW5nIGFybWFzc2ltaWxhdG9yIGFybWx1bmNoYm94IGFybXNwdGt0NCBhcm1kcm9uZWNhcnJ5bGFuZCBhcm1yYXR0ZXQ0JyxzcGF3bnNfbW9kZT0ncmFuZG9tJ319fX0sY29ydDE9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0NvcnRleCBUMSBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtzdG9ja3BpbGV0aW1lPTAuNSxyYW5nZT03NTUwLG1ldGFscGVyc2hvdD0yNTAsZW5lcmd5cGVyc2hvdD0xMjUwMCxyZWxvYWR0aW1lPTAuNSxjdXN0b21wYXJhbXM9e3N0b2NrcGlsZWxpbWl0PTUwLHNwYXduc19uYW1lPSdjb3JhayBjb3JjcmFzaCBjb3JzdG9ybSBjb3J0aHVkIGNvcmFoIGNvcmhhbCBjb3JtaCBjb3JzaCBjb3JzbmFwIGNvcnRob3ZyIGNvcmZhdiBjb3JnYXJwIGNvcmdhdG9yIGNvcmxldmxyIGNvcm1pc3QgY29ycmFpZCBjb3J3b2x2IGNvcnRvcmNoJyxzcGF3bnNfbW9kZT0ncmFuZG9tJ319fX0sY29ydDI9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0NvcnRleCBUMiBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtzdG9ja3BpbGV0aW1lPTEscmFuZ2U9NzU1MCxtZXRhbHBlcnNob3Q9OTcwLGVuZXJneXBlcnNob3Q9NDUwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nY29yYWFrIGNvcmFtcGggY29yY2FuIGNvcmZhc3QgY29yaHJrIGNvcm1vcnQgY29ycHlybyBjb3Jyb2FjaCBjb3Jza3RsIGNvcnN1bW8gY29ydGVybWl0ZSBjb3JiYW4gY29yZ29sIGNvcm1hYm0gY29ybWFydCBjb3JwYXJyb3cgY29ycmVhcCBjb3JzYWxhIGNvcnNlYWwgY29yc2VudCBjb3JzaWVnZWJyZWFrZXIgY29ydHJlbSBjb3J2cmFkIGNvcnZyb2MgY29yZnRpZ2VyIGNvcmdhdHJlYXAnLHNwYXduc19tb2RlPSdyYW5kb20nfX19fSxjb3J0Mz17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nQ29ydGV4IFQzIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MixyYW5nZT03NTUwLG1ldGFscGVyc2hvdD04NTAwLGVuZXJneXBlcnNob3Q9MTgwMDAwLHJlbG9hZHRpbWU9MC41LGN1c3RvbXBhcmFtcz17c3RvY2twaWxlbGltaXQ9NTAsc3Bhd25zX25hbWU9J2NvcmNhdCBjb3JkZW1vbiBjb3JqdWdnIGNvcmthcmcgY29ya29yZyBjb3JzaGl2YSBjb3Jha3Q0IGNvcmRlYWRleWUgY29ya2FyZ2FuZXRodDQgY29ya2FyayBjb3J0aGVybWl0ZSBjb3Jnb2x0NCcsc3Bhd25zX21vZGU9J3JhbmRvbSd9fX19LGxlZ3QxPXtjdXN0b21wYXJhbXM9e2kxOG5fZW5faHVtYW5uYW1lPSdMZWdpb24gVDEgTGF1bmNoZXInfSx3ZWFwb25kZWZzPXthcm1fYm90cmFpbD17c3RvY2twaWxldGltZT0wLjUscmFuZ2U9NzU1MCxtZXRhbHBlcnNob3Q9MjUwLGVuZXJneXBlcnNob3Q9MTI1MDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nbGVnYmFsIGxlZ2NlbiBsZWdnb2IgbGVna2FyayBsZWdsb2IgbGVnYWggbGVnY2FyIGxlZ21oIGxlZ25lciBsZWdzaCBsZWdhbXBodGFuayBsZWdiYXIgbGVnZ2F0IGxlZ2hhZGVzIGxlZ2hlbGlvcyBsZWdyYWlsJyxzcGF3bnNfbW9kZT0ncmFuZG9tJ319fX0sbGVndDI9e2N1c3RvbXBhcmFtcz17aTE4bl9lbl9odW1hbm5hbWU9J0xlZ2lvbiBUMiBMYXVuY2hlcid9LHdlYXBvbmRlZnM9e2FybV9ib3RyYWlsPXtzdG9ja3BpbGV0aW1lPTEscmFuZ2U9NzU1MCxtZXRhbHBlcnNob3Q9OTcwLGVuZXJneXBlcnNob3Q9NDUwMDAscmVsb2FkdGltZT0wLjUsY3VzdG9tcGFyYW1zPXtzdG9ja3BpbGVsaW1pdD01MCxzcGF3bnNfbmFtZT0nbGVnYW1waCBsZWdiYXJ0IGxlZ2RlY29tIGxlZ2luYyBsZWdzaG90IGxlZ3NuYXBwZXIgbGVnc3JhaWwgbGVnc3RyIGxlZ2FoZWF0dGFuayBsZWdhbWNsdXN0ZXIgbGVnYXNraXJtdGFuayBsZWdhdnJvYyBsZWdmbG9hdCBsZWdpbmYgbGVnbWVkIGxlZ21ydiBsZWd2Y2FycnkgbGVndmZsYWsnLHNwYXduc19tb2RlPSdyYW5kb20nfX19fSxsZWd0Mz17Y3VzdG9tcGFyYW1zPXtpMThuX2VuX2h1bWFubmFtZT0nTGVnaW9uIFQzIExhdW5jaGVyJ30sd2VhcG9uZGVmcz17YXJtX2JvdHJhaWw9e3N0b2NrcGlsZXRpbWU9MixyYW5nZT03NTUwLG1ldGFscGVyc2hvdD04NTAwLGVuZXJneXBlcnNob3Q9MTgwMDAwLHJlbG9hZHRpbWU9MC41LGN1c3RvbXBhcmFtcz17c3RvY2twaWxlbGltaXQ9NTAsc3Bhd25zX25hbWU9J2xlZWdtZWNoIGxlZ2J1bmsgbGVnZWhlYXRyYXltZWNoIGxlZ2VscnBjbWVjaCBsZWdlcmFpbHRhbmsgbGVnZXNob3RndW5tZWNoIGxlZ2phdiBsZWdrZXJlcyBsZWdnb2J0MyBsZWdwZWRlIGxlZ3NyYWlsdDQnLHNwYXduc19tb2RlPSdyYW5kb20nfX19fX1pZiBVbml0RGVmcy5jb3JtYW5kb3Q0IHRoZW4gZm9yIGMsZCBpbiBwYWlycyhiKWRvIGxvY2FsIGU9YS4uJ18nLi5jO2lmIFVuaXREZWZzW2FdYW5kIG5vdCBVbml0RGVmc1tlXXRoZW4gVW5pdERlZnNbZV09dGFibGUubWVyZ2UoVW5pdERlZnNbYV0sZCl0YWJsZS5pbnNlcnQoVW5pdERlZnMuY29ybWFuZG90NC5idWlsZG9wdGlvbnMsZSllbmQgZW5kIGVuZA